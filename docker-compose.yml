x-airflow-common: &airflow-common
  image: apache/airflow:2.5.1
  restart: always
  env_file: .env
  environment:
    AIRFLOW__CORE__EXECUTOR: ${AIRFLOW_EXECUTOR}
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
    AIRFLOW_CONN_POSTGRES_DEFAULT: ${AIRFLOW_CONN_POSTGRES_DEFAULT}
    AIRFLOW_CONN_GREENPLUM_DEFAULT: ${AIRFLOW_CONN_GREENPLUM_DEFAULT}
  volumes:
    - ./airflow/dags:/opt/airflow/dags

services:

  #Backend
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - postgres
      - greenplum
    networks:
      - backend_network

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    ports:
      - "${KEYCLOAK_PORT}:8080"
      - "${KEYCLOAK_HTTPS_PORT}:8443"
      - "${KEYCLOAK_HEALTH_CHECK_PORT}:9000"

    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    command: start-dev
    networks:
      - backend_network

  # Airflow's dedicated database
  airflow-db:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    ports:
      - "${AIRFLOW_DB_PORT}:5432"
    volumes:
      - airflow_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AIRFLOW_DB_USER} -d ${AIRFLOW_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Backend database
  postgres:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend_network

  greenplum:
    image: datagrip/greenplum:6.8
    env_file: .env
    environment:
      GP_PORT: 5432
      GP_USER: ${GREENPLUM_USER}
      GP_PASSWORD: ${GREENPLUM_PASSWORD}
      GP_DB: ${GREENPLUM_DB}
    ports:
      - "${GREENPLUM_PORT}:5432"
    volumes:
      - greenplum_data:/data
      - ./init-greenplum.sql:/opt/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GREENPLUM_USER} -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - backend_network

  airflow-webserver:
    <<: *airflow-common
    depends_on:
      airflow-db:
        condition: service_healthy
    ports:
      - "8080:8080"
    command: >
      bash -c "
      while ! pg_isready -h airflow-db -p 5432 -U ${AIRFLOW_DB_USER}; do sleep 1; done &&
      airflow db init &&
      (airflow users create -u ${AIRFLOW_ADMIN_USERNAME} -p ${AIRFLOW_ADMIN_PASSWORD} -f ${AIRFLOW_ADMIN_FIRSTNAME} -l ${AIRFLOW_ADMIN_LASTNAME} -r Admin -e ${AIRFLOW_ADMIN_EMAIL}) &&
      airflow webserver
      "
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 10s
      timeout: 10s
      retries: 10

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      airflow-db:
        condition: service_healthy
      airflow-webserver:
        condition: service_healthy
    command: >
      bash -c "
      while ! pg_isready -h airflow-db -p 5432 -U ${AIRFLOW_DB_USER}; do sleep 1; done &&
      airflow scheduler
      "

volumes:
  airflow_db_data:
  postgres_data:
  greenplum_data:

networks:
  backend_network:
    driver: bridge